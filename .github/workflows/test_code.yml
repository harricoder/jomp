name: "Test Code"

on:
  push:
    paths-ignore:
      - "**.md"
      - "docs/**"
    # Prevent duplicating jobs on PR-s from local branches
    branches:
      - "main"
  pull_request:
    paths-ignore:
      - "**.md"
      - "docs/**"

concurrency:
  group: sa-${{ github.head_ref || github.run_id }} # will be canceled on subsequent pushes in pull requests but not branches
  cancel-in-progress: true

env:
  PHP_INI_VALUES: memory_limit=-1, assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On

permissions:
  contents: read

jobs:
  unit-tests:
    name: PHP Unit Tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          ini-values: ${{ env.PHP_INI_VALUES }}
          extensions: none, curl, dom, fileinfo, iconv, json, mbstring, phar, redis, simplexml, tokenizer, xml, xmlwriter
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Run PHP Unit Tests
        run: composer code:test -- --testsuite=Unit

  feature-tests:
    name: PHP Feature Tests

    runs-on: ubuntu-20.04

    needs:
      - unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          ini-values: ${{ env.PHP_INI_VALUES }}
          extensions: curl, dom, fileinfo, iconv, gd, json, mbstring, pdo, pdo_sqlite, phar, redis, simplexml, sqlite, tokenizer, xml, xmlwriter, zip
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress --no-scripts

      - name: Prepare the Laravel App
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
          php artisan config:clear

      - name: Create Database
        run: |
          touch database/database.sqlite

      - name: Compile assets
        run: |
          yarn install
          yarn run build

      - name: Run PHP Feature Tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: composer code:test -- --testsuite=Feature

  code-coverage:
    name: PHP Code Coverage

    runs-on: ubuntu-latest

    needs:
      - feature-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          ini-values: ${{ env.PHP_INI_VALUES }}
          extensions: curl, dom, fileinfo, iconv, gd, json, mbstring, pdo, pdo_sqlite, phar, redis, simplexml, sqlite, tokenizer, xml, xmlwriter, zip
          tools: composer:v2
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress --no-scripts

      - name: Prepare the Laravel App
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
          php artisan config:clear

      - name: Create Database
        run: |
          touch database/database.sqlite

      - name: Compile assets
        run: |
          yarn install
          yarn run build

      - name: Run PHP Tests With Code Coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test --min=70 --profile --coverage --coverage-clover=coverage.xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
